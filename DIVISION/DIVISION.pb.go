// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: DIVISION/DIVISION.proto

package GrpcServerDivision

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComputationRequest_OperationType int32

const (
	ComputationRequest_DIVISION ComputationRequest_OperationType = 0
)

// Enum value maps for ComputationRequest_OperationType.
var (
	ComputationRequest_OperationType_name = map[int32]string{
		0: "DIVISION",
	}
	ComputationRequest_OperationType_value = map[string]int32{
		"DIVISION": 0,
	}
)

func (x ComputationRequest_OperationType) Enum() *ComputationRequest_OperationType {
	p := new(ComputationRequest_OperationType)
	*p = x
	return p
}

func (x ComputationRequest_OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputationRequest_OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_DIVISION_DIVISION_proto_enumTypes[0].Descriptor()
}

func (ComputationRequest_OperationType) Type() protoreflect.EnumType {
	return &file_DIVISION_DIVISION_proto_enumTypes[0]
}

func (x ComputationRequest_OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputationRequest_OperationType.Descriptor instead.
func (ComputationRequest_OperationType) EnumDescriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{2, 0}
}

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3 // Used only by the Watch method.
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_DIVISION_DIVISION_proto_enumTypes[1].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_DIVISION_DIVISION_proto_enumTypes[1]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{10, 0}
}

type DivisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int64 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B int64 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *DivisionRequest) Reset() {
	*x = DivisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivisionRequest) ProtoMessage() {}

func (x *DivisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivisionRequest.ProtoReflect.Descriptor instead.
func (*DivisionRequest) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{0}
}

func (x *DivisionRequest) GetA() int64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *DivisionRequest) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

type DivisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DivisionResponse) Reset() {
	*x = DivisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivisionResponse) ProtoMessage() {}

func (x *DivisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivisionResponse.ProtoReflect.Descriptor instead.
func (*DivisionResponse) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{1}
}

func (x *DivisionResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ComputationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation ComputationRequest_OperationType `protobuf:"varint,1,opt,name=operation,proto3,enum=ADD.ComputationRequest_OperationType" json:"operation,omitempty"`
	Operand1  float64                          `protobuf:"fixed64,2,opt,name=operand1,proto3" json:"operand1,omitempty"`
	Operand2  float64                          `protobuf:"fixed64,3,opt,name=operand2,proto3" json:"operand2,omitempty"`
}

func (x *ComputationRequest) Reset() {
	*x = ComputationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputationRequest) ProtoMessage() {}

func (x *ComputationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputationRequest.ProtoReflect.Descriptor instead.
func (*ComputationRequest) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{2}
}

func (x *ComputationRequest) GetOperation() ComputationRequest_OperationType {
	if x != nil {
		return x.Operation
	}
	return ComputationRequest_DIVISION
}

func (x *ComputationRequest) GetOperand1() float64 {
	if x != nil {
		return x.Operand1
	}
	return 0
}

func (x *ComputationRequest) GetOperand2() float64 {
	if x != nil {
		return x.Operand2
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int64   `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Value    float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Result) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ComputationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result float64 `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ComputationResponse) Reset() {
	*x = ComputationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputationResponse) ProtoMessage() {}

func (x *ComputationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputationResponse.ProtoReflect.Descriptor instead.
func (*ComputationResponse) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{4}
}

func (x *ComputationResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type PrePrepareMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID  int64               `protobuf:"varint,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	View      int64               `protobuf:"varint,2,opt,name=View,proto3" json:"View,omitempty"`
	Sequence  int64               `protobuf:"varint,3,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	Operation *ComputationRequest `protobuf:"bytes,4,opt,name=Operation,proto3" json:"Operation,omitempty"`
}

func (x *PrePrepareMessage) Reset() {
	*x = PrePrepareMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrePrepareMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrePrepareMessage) ProtoMessage() {}

func (x *PrePrepareMessage) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrePrepareMessage.ProtoReflect.Descriptor instead.
func (*PrePrepareMessage) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{5}
}

func (x *PrePrepareMessage) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *PrePrepareMessage) GetView() int64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PrePrepareMessage) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PrePrepareMessage) GetOperation() *ComputationRequest {
	if x != nil {
		return x.Operation
	}
	return nil
}

type PrepareMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID  int64               `protobuf:"varint,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	View      int64               `protobuf:"varint,2,opt,name=View,proto3" json:"View,omitempty"`
	Sequence  int64               `protobuf:"varint,3,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	Operation *ComputationRequest `protobuf:"bytes,4,opt,name=Operation,proto3" json:"Operation,omitempty"`
}

func (x *PrepareMessage) Reset() {
	*x = PrepareMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareMessage) ProtoMessage() {}

func (x *PrepareMessage) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareMessage.ProtoReflect.Descriptor instead.
func (*PrepareMessage) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{6}
}

func (x *PrepareMessage) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *PrepareMessage) GetView() int64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PrepareMessage) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PrepareMessage) GetOperation() *ComputationRequest {
	if x != nil {
		return x.Operation
	}
	return nil
}

type CommitMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID  int64               `protobuf:"varint,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	View      int64               `protobuf:"varint,2,opt,name=View,proto3" json:"View,omitempty"`
	Sequence  int64               `protobuf:"varint,3,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	Operation *ComputationRequest `protobuf:"bytes,4,opt,name=Operation,proto3" json:"Operation,omitempty"`
}

func (x *CommitMessage) Reset() {
	*x = CommitMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitMessage) ProtoMessage() {}

func (x *CommitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitMessage.ProtoReflect.Descriptor instead.
func (*CommitMessage) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{7}
}

func (x *CommitMessage) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *CommitMessage) GetView() int64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *CommitMessage) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *CommitMessage) GetOperation() *ComputationRequest {
	if x != nil {
		return x.Operation
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{8}
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ADD.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DIVISION_DIVISION_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DIVISION_DIVISION_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_DIVISION_DIVISION_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_DIVISION_DIVISION_proto protoreflect.FileDescriptor

var file_DIVISION_DIVISION_proto_rawDesc = []byte{
	0x0a, 0x17, 0x44, 0x49, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x2f, 0x44, 0x49, 0x56, 0x49, 0x53,
	0x49, 0x4f, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x41, 0x44, 0x44, 0x22, 0x2d,
	0x0a, 0x0f, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x61, 0x12,
	0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x62, 0x22, 0x2a, 0x0a,
	0x10, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x41, 0x44, 0x44, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64,
	0x31, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x32, 0x22, 0x1d, 0x0a,
	0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x49, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x22, 0x3a, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41,
	0x44, 0x44, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x93, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x35, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x44, 0x44, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x44, 0x44, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x41,
	0x44, 0x44, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x32, 0x8a, 0x01,
	0x0a, 0x0b, 0x50, 0x42, 0x46, 0x54, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x41, 0x44, 0x44, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x41,
	0x44, 0x44, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x44, 0x69, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x2e, 0x41, 0x44,
	0x44, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x41, 0x44, 0x44, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x82, 0x01, 0x0a, 0x06, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x17,
	0x2e, 0x41, 0x44, 0x44, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x44, 0x44, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x41, 0x44, 0x44,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x44, 0x44, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42,
	0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61,
	0x6a, 0x65, 0x73, 0x68, 0x72, 0x65, 0x64, 0x64, 0x79, 0x74, 0x2f, 0x47, 0x72, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_DIVISION_DIVISION_proto_rawDescOnce sync.Once
	file_DIVISION_DIVISION_proto_rawDescData = file_DIVISION_DIVISION_proto_rawDesc
)

func file_DIVISION_DIVISION_proto_rawDescGZIP() []byte {
	file_DIVISION_DIVISION_proto_rawDescOnce.Do(func() {
		file_DIVISION_DIVISION_proto_rawDescData = protoimpl.X.CompressGZIP(file_DIVISION_DIVISION_proto_rawDescData)
	})
	return file_DIVISION_DIVISION_proto_rawDescData
}

var file_DIVISION_DIVISION_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_DIVISION_DIVISION_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_DIVISION_DIVISION_proto_goTypes = []interface{}{
	(ComputationRequest_OperationType)(0),  // 0: ADD.ComputationRequest.OperationType
	(HealthCheckResponse_ServingStatus)(0), // 1: ADD.HealthCheckResponse.ServingStatus
	(*DivisionRequest)(nil),                // 2: ADD.DivisionRequest
	(*DivisionResponse)(nil),               // 3: ADD.DivisionResponse
	(*ComputationRequest)(nil),             // 4: ADD.ComputationRequest
	(*Result)(nil),                         // 5: ADD.Result
	(*ComputationResponse)(nil),            // 6: ADD.ComputationResponse
	(*PrePrepareMessage)(nil),              // 7: ADD.PrePrepareMessage
	(*PrepareMessage)(nil),                 // 8: ADD.PrepareMessage
	(*CommitMessage)(nil),                  // 9: ADD.CommitMessage
	(*Empty)(nil),                          // 10: ADD.Empty
	(*HealthCheckRequest)(nil),             // 11: ADD.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 12: ADD.HealthCheckResponse
}
var file_DIVISION_DIVISION_proto_depIdxs = []int32{
	0,  // 0: ADD.ComputationRequest.operation:type_name -> ADD.ComputationRequest.OperationType
	4,  // 1: ADD.PrePrepareMessage.Operation:type_name -> ADD.ComputationRequest
	4,  // 2: ADD.PrepareMessage.Operation:type_name -> ADD.ComputationRequest
	4,  // 3: ADD.CommitMessage.Operation:type_name -> ADD.ComputationRequest
	1,  // 4: ADD.HealthCheckResponse.status:type_name -> ADD.HealthCheckResponse.ServingStatus
	4,  // 5: ADD.PBFTService.ProcessComputation:input_type -> ADD.ComputationRequest
	2,  // 6: ADD.PBFTService.DivisionMethod:input_type -> ADD.DivisionRequest
	11, // 7: ADD.Health.Check:input_type -> ADD.HealthCheckRequest
	11, // 8: ADD.Health.Watch:input_type -> ADD.HealthCheckRequest
	5,  // 9: ADD.PBFTService.ProcessComputation:output_type -> ADD.Result
	3,  // 10: ADD.PBFTService.DivisionMethod:output_type -> ADD.DivisionResponse
	12, // 11: ADD.Health.Check:output_type -> ADD.HealthCheckResponse
	12, // 12: ADD.Health.Watch:output_type -> ADD.HealthCheckResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_DIVISION_DIVISION_proto_init() }
func file_DIVISION_DIVISION_proto_init() {
	if File_DIVISION_DIVISION_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DIVISION_DIVISION_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrePrepareMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DIVISION_DIVISION_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DIVISION_DIVISION_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_DIVISION_DIVISION_proto_goTypes,
		DependencyIndexes: file_DIVISION_DIVISION_proto_depIdxs,
		EnumInfos:         file_DIVISION_DIVISION_proto_enumTypes,
		MessageInfos:      file_DIVISION_DIVISION_proto_msgTypes,
	}.Build()
	File_DIVISION_DIVISION_proto = out.File
	file_DIVISION_DIVISION_proto_rawDesc = nil
	file_DIVISION_DIVISION_proto_goTypes = nil
	file_DIVISION_DIVISION_proto_depIdxs = nil
}
